{"version":3,"sources":["store/utils/index.js","store/app/actions.js","store/app/utils.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware/localStorageMiddleware/loadState.js","store/middleware/localStorageMiddleware/saveState.js","store/middleware/localStorageMiddleware/index.js","store/middleware/localStorageMiddleware/hasLocalStorage.js","store/middleware/localStorageMiddleware/storageDefinitions.js","store/middleware/index.js","store/index.js","store/story/selectors.js","styles/mediaQueries.js","components/Nav/styles.js","components/Nav/Nav.js","components/Nav/index.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/GridItem/styles.js","components/GridItem/index.js","components/Grid/styles.js","components/Grid/index.js","components/Loader/styles.js","components/Loader/index.js","styles/palette.js","components/App/styles.js","components/App/App.js","components/App/index.js","styles/globals.js","store/middleware/localStorageMiddleware/loadInitialState.js","registerServiceWorker.js","index.js"],"names":["buildActionCreator","type","payload","buildRequestCreator","requestCallback","request","success","failure","mapTypeToRequest","dispatch","NS","actionTypes","SET_THEME","SET_LAYOUT","actions","setTheme","setLayout","layouts","themes","app","state","theme","layout","getInitialState","console","log","API_ROOT","process","URL","HEADERS","Accept","client","constructor","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","get","path","then","data","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","FETCH_STORY_IDS_REQUEST","FETCH_STORIES","fetchStoryIds","FETCH_STORY_IDS","storyIds","fetchStories","catch","err","stories","story","isFetching","rootReducer","combineReducers","loadState","storageKey","serializedState","localStorage","getItem","JSON","parse","saveState","stringify","setItem","localCache","storageType","window","storage","testKey","removeItem","e","hasLocalStorage","storageDefinitions","store","next","action","prevState","getState","localCacheFunction","result","nextState","Array","isArray","forEach","f","THEME_KEY","LAYOUT_KEY","middlewareList","push","thunk","localStorageMiddleware","middleware","compose","applyMiddleware","configureStore","initialState","createStore","reducer","hasMoreStoriesSelector","createSelector","length","mobile","tablet","Header","styled","header","backgroundSecondary","text","Content","div","NavSection","Icon","Spacer","img","ExternalLink","a","Nav","href","target","onClick","className","connect","getSiteHostname","siteUrl","hostname","includes","url","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","li","border","Title","h3","Host","span","textSecondary","Description","CommentLink","ListItem","by","kids","score","title","time","site","link","rel","date","Date","toISOString","ListWrapper","ul","List","Component","render","props","key","Card","Image","Source","GridItem","src","GridWrapper","Grid","blink","keyframes","Animation","Loader","colorsDark","background","colorsLight","Wrapper","h1","TitleWrapper","App","componentDidMount","fetchStoriesFirstPage","setBodyBackgroundColor","componentDidUpdate","prevProps","document","body","style","hasMoreStores","dataLength","hasMore","loader","height","overflow","defaultProps","GlobalStyles","createGlobalStyle","loadInitialState","isLocalhost","Boolean","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","renderApp","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.072b4b8e.chunk.js","sourcesContent":["export const buildActionCreator = type => {\r\n  return (payload = {}) => ({\r\n    type,\r\n    payload,\r\n  });\r\n};\r\n\r\nexport const buildRequestActionTypes = (type, namespace) => ({\r\n  [`${type}_REQUEST`]: `${namespace}/${type}_REQUEST`,\r\n  [`${type}_SUCCESS`]: `${namespace}/${type}_SUCCESS`,\r\n  [`${type}_FAILURE`]: `${namespace}/${type}_FAILURE`,\r\n});\r\n\r\nexport const buildEventActionCreator = type => {\r\n  return (name = '', data = {}) => ({\r\n    type,\r\n    payload: {},\r\n    event: {\r\n      name,\r\n      data,\r\n    },\r\n  });\r\n};\r\n\r\nconst mapTypeToRequest = type => ({\r\n  request: buildActionCreator(`${type}_REQUEST`),\r\n  success: buildActionCreator(`${type}_SUCCESS`),\r\n  failure: buildActionCreator(`${type}_FAILURE`),\r\n});\r\n\r\nexport const buildRequestCreator = (type, requestCallback) => {\r\n  const request = mapTypeToRequest(type);\r\n  return (payload = {}) => dispatch => requestCallback({ request, payload, dispatch });\r\n};\r\n","import { buildActionCreator } from 'store/utils';\r\n\r\nconst NS = '@hackerNewsReader/app';\r\n\r\nexport const actionTypes = {\r\n  SET_THEME: `${NS}/SET_THEME`,\r\n  SET_LAYOUT: `${NS}/SET_LAYOUT`,\r\n};\r\n\r\nconst actions = {\r\n  setTheme: buildActionCreator(actionTypes.SET_THEME),\r\n  setLayout: buildActionCreator(actionTypes.SET_LAYOUT),\r\n};\r\n\r\nexport default actions;\r\n","export const layouts = {\r\n  grid: 'grid',\r\n  list: 'list',\r\n};\r\n\r\nexport const themes = {\r\n  dark: 'dark',\r\n  light: 'light',\r\n};\r\n\r\nexport const AppReducerData = {\r\n  initialState: {\r\n    theme: themes.dark,\r\n    layout: layouts.list,\r\n  },\r\n  payload: { theme: themes.light },\r\n};\r\n","import { actionTypes } from './actions';\r\nimport { layouts, themes } from './utils';\r\n\r\nconst getInitialState = () => ({\r\n  theme: themes.dark,\r\n  layout: layouts.list,\r\n});\r\n\r\nconst app = (state = getInitialState(), { type, payload }) => {\r\n  console.log('payload: ', payload);\r\n  switch (type) {\r\n    case actionTypes.SET_THEME:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case actionTypes.SET_LAYOUT:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import axios from 'axios';\r\n\r\n// Default API will be your root\r\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\r\nconst TIMEOUT = 20000;\r\nconst HEADERS = {\r\n  'Content-Type': 'application/json',\r\n  Accept: 'application/json',\r\n};\r\n\r\nclass ApiService {\r\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\r\n    const client = axios.create({\r\n      baseURL,\r\n      timeout,\r\n      headers,\r\n      auth,\r\n    });\r\n\r\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.client = client;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  get(path) {\r\n    return this.client.get(path).then(response => response.data);\r\n  }\r\n\r\n  post(path, payload) {\r\n    return this.client.post(path, payload).then(response => response.data);\r\n  }\r\n\r\n  put(path, payload) {\r\n    return this.client.put(path, payload).then(response => response.data);\r\n  }\r\n\r\n  patch(path, payload) {\r\n    return this.client.patch(path, payload).then(response => response.data);\r\n  }\r\n\r\n  delete(path) {\r\n    return this.client.delete(path).then(response => response.data);\r\n  }\r\n}\r\n\r\nexport default ApiService;\r\n","import ApiService from './Api';\r\n\r\nconst JSON_QUERY = '.json?print=pretty';\r\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\r\nconst client = new ApiService({ baseURL: BASE_URL });\r\n\r\nconst hackerNewsApi = {};\r\n\r\nconst PAGE_LIMIT = 20;\r\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\r\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\r\n\r\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\r\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\r\nhackerNewsApi.getStoriesByPage = (ids, page) => {\r\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\r\n  const activeIds = getPageValues({ begin, end, items: ids });\r\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\r\n  return Promise.all(storyPromises);\r\n};\r\n\r\nexport default hackerNewsApi;\r\n","import hackerNewsApi from 'services/hackerNewsApi';\r\nimport { buildRequestCreator } from 'store/utils';\r\n\r\nconst NS = '@hackerNewsReader/story';\r\n\r\nexport const actionTypes = {\r\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS`,\r\n  FETCH_STORIES: `${NS}/FETCH_STORIES`,\r\n};\r\n\r\nconst actions = {\r\n  fetchStoryIds: buildRequestCreator(\r\n    actionTypes.FETCH_STORY_IDS,\r\n    ({ request, payload, dispatch }) => {\r\n      dispatch(request.request(payload));\r\n      return hackerNewsApi\r\n        .getTopStoryIds()\r\n        .then(storyIds => {\r\n          dispatch(request.success({ storyIds }));\r\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\r\n          return storyIds;\r\n        })\r\n        .catch(err => dispatch(request.failure(err)));\r\n    },\r\n  ),\r\n  fetchStories: buildRequestCreator(actionTypes.FETCH_STORIES, ({ request, payload, dispatch }) => {\r\n    const { storyIds, page } = payload;\r\n    dispatch(request.request(payload));\r\n    return hackerNewsApi\r\n      .getStoriesByPage(storyIds, page)\r\n      .then(stories => dispatch(request.success({ stories })))\r\n      .catch(err => dispatch(request.failure(err)));\r\n  }),\r\n};\r\n\r\nexport default actions;\r\n","import { actionTypes } from './actions';\r\n\r\nconst getInitialState = () => ({\r\n  storyIds: [],\r\n  stories: [],\r\n  page: 0,\r\n  isFetching: false,\r\n  error: '',\r\n});\r\n\r\nconst story = (state = getInitialState(), { type, payload }) => {\r\n  switch (type) {\r\n    case `${actionTypes.FETCH_STORY_IDS}_REQUEST`:\r\n    case `${actionTypes.FETCH_STORIES}_REQUEST`:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case `${actionTypes.FETCH_STORY_IDS}_SUCCESS`:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case `${actionTypes.FETCH_STORIES}_SUCCESS`:\r\n      return {\r\n        ...state,\r\n        stories: [...state.stories, ...payload.stories],\r\n        page: state.page + 1,\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default story;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport app from './app/reducer';\r\nimport story from './story/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  story,\r\n  app,\r\n});\r\n\r\nexport default rootReducer;\r\n","function loadState({ storageKey }) {\r\n  try {\r\n    const serializedState = localStorage.getItem(storageKey);\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n\r\n    const parsedState = JSON.parse(serializedState);\r\n\r\n    return parsedState;\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default loadState;\r\n","function saveState({ storageKey, state }) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n\r\n    localStorage.setItem(storageKey, serializedState);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n}\r\n\r\nexport default saveState;\r\n","import hasLocalStorage from './hasLocalStorage';\r\nimport loadState from './loadState';\r\nimport saveState from './saveState';\r\n\r\nconst emptyMiddleware = storageDefinitions => store => next => action => next(action);\r\n\r\nconst localCacheMiddleware = storageDefinitions => store => next => action => {\r\n  const prevState = store.getState();\r\n  const localCacheFunction = storageDefinitions[action.type];\r\n  const result = next(action);\r\n  const nextState = store.getState();\r\n\r\n  if (localCacheFunction) {\r\n    if (typeof localCacheFunction === 'function') {\r\n      localCacheFunction({\r\n        action,\r\n        loadState,\r\n        saveState,\r\n        prevState,\r\n        nextState,\r\n        dispatch: store.dispatch,\r\n      });\r\n    } else if (Array.isArray(localCacheFunction)) {\r\n      localCacheFunction.forEach(f =>\r\n        f({\r\n          action,\r\n          loadState,\r\n          saveState,\r\n          prevState,\r\n          nextState,\r\n          dispatch: store.dispatch,\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst localCache = hasLocalStorage() ? localCacheMiddleware : emptyMiddleware;\r\n\r\nexport default localCache;\r\n","const STORAGE_TYPE = 'localStorage';\r\n\r\nconst hasLocalStorage = (storageType = STORAGE_TYPE) => {\r\n  if (typeof window === 'undefined' || !(storageType in window)) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    let storage = window[storageType];\r\n    const testKey = `storage ${storageType} test`;\r\n    storage.setItem(testKey, 'test');\r\n    storage.getItem(testKey);\r\n    storage.removeItem(testKey);\r\n  } catch (e) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn(`redux-persist ${storageType} test failed, persistence will be disabled.`);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport default hasLocalStorage;\r\n","import { actionTypes } from 'store/app/actions';\r\n\r\nconst BASE_STORAGE_KEY = '@@hackerNewsReader/storage';\r\nexport const THEME_KEY = `${BASE_STORAGE_KEY}/theme`;\r\nexport const LAYOUT_KEY = `${BASE_STORAGE_KEY}/layout`;\r\n\r\nconst storageDefinitions = {\r\n  [actionTypes.SET_THEME]: [\r\n    ({ action, saveState }) => saveState({ state: action.payload.theme, storageKey: THEME_KEY }),\r\n  ],\r\n  [actionTypes.SET_LAYOUT]: [\r\n    ({ action, saveState }) => saveState({ state: action.payload.layout, storageKey: LAYOUT_KEY }),\r\n  ],\r\n};\r\n\r\nexport default storageDefinitions;\r\n","import { applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport localStorageMiddleware from 'store/middleware/localStorageMiddleware';\r\nimport storageDefinitions from 'store/middleware/localStorageMiddleware/storageDefinitions';\r\n\r\nconst isProd = process.env.NODE_ENV === 'production';\r\nconst middlewareList = [];\r\nlet devTool = f => f;\r\n\r\nmiddlewareList.push(thunk);\r\nmiddlewareList.push(localStorageMiddleware(storageDefinitions));\r\n\r\nif (!isProd) {\r\n  middlewareList.push(createLogger());\r\n}\r\n\r\nconst middleware = compose(\r\n  applyMiddleware(...middlewareList),\r\n  devTool,\r\n);\r\n\r\nexport default middleware;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport middleware from './middleware';\r\n\r\nconst configureStore = initialState => {\r\n  const store = createStore(reducer, initialState, middleware);\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst storyIdsSelector = state => state.story.storyIds;\r\nconst storiesSelector = state => state.story.stories;\r\n\r\nexport const hasMoreStoriesSelector = createSelector(\r\n  storyIdsSelector,\r\n  storiesSelector,\r\n  (storyIds, stories) => storyIds.length > stories.length,\r\n);\r\n","export const mobile = '@media only screen and  (max-width: 480px)';\r\nexport const tablet = '@media only screen and  (max-width: 768px)';\r\nexport const monitor = '@media only screen and  (min-width: 1400px)';\r\n","import styled from 'styled-components';\r\nimport { tablet } from 'styles/mediaQueries';\r\n\r\nconst HEIGHT = 48;\r\n\r\nexport const Header = styled.header`\r\n  background-color: ${({ theme }) => theme.backgroundSecondary};\r\n  height: ${HEIGHT}px;\r\n  color: ${({ theme }) => theme.text};\r\n  width: 100%;\r\n  box-shadow: 0 1px 0 0 black;\r\n  position: fixed;\r\n  top: 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: 85%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  ${tablet} {\r\n    max-width: 96%;\r\n  }\r\n`;\r\n\r\nexport const NavSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-left: 12px;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  height: 20px;\r\n  border-radius: 2px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Spacer = styled.div`\r\n  height: ${HEIGHT}px;\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  display: flex;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { layouts, themes } from 'store/app/utils';\r\n\r\nimport { Header, Spacer, NavSection, Content, Icon, Logo, ExternalLink } from './styles';\r\n\r\nconst Nav = ({ layout, theme, setLayout, setTheme }) => (\r\n  <div>\r\n    <Header>\r\n      <Content>\r\n        <NavSection>\r\n          <ExternalLink href=\"https://github.com/paulepps\" target=\"_blank\">\r\n             Paul Epps\r\n          </ExternalLink>\r\n        </NavSection>\r\n        <NavSection>\r\n          {layout === layouts.list ? (\r\n            <Icon onClick={() => setLayout(layouts.grid)}>\r\n              <i className=\"fas fa-th-large\" />\r\n            </Icon>\r\n          ) : (\r\n            <Icon onClick={() => setLayout(layouts.list)}>\r\n              <i className=\"fas fa-th-list\" />\r\n            </Icon>\r\n          )}\r\n          {theme === themes.light ? (\r\n            <Icon onClick={() => setTheme(themes.dark)}>\r\n              <i className=\"fas fa-moon\" />\r\n            </Icon>\r\n          ) : (\r\n            <Icon onClick={() => setTheme(themes.light)}>\r\n              <i className=\"fas fa-sun\" />\r\n            </Icon>\r\n          )}\r\n        </NavSection>\r\n      </Content>\r\n    </Header>\r\n    <Spacer />\r\n  </div>\r\n);\r\n\r\nNav.propTypes = {\r\n  layout: PropTypes.string.isRequired,\r\n  theme: PropTypes.string.isRequired,\r\n  setLayout: PropTypes.func.isRequired,\r\n  setTheme: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Nav;\r\n","import { connect } from 'react-redux';\r\nimport actions from 'store/app/actions';\r\nimport Nav from './Nav';\r\n\r\nconst mapStateToProps = state => ({\r\n  layout: state.app.layout,\r\n  theme: state.app.theme,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setTheme: theme => dispatch(actions.setTheme({ theme })),\r\n  setLayout: layout => dispatch(actions.setLayout({ layout })),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Nav);\r\n","import url from 'url';\r\n\r\nconst getSiteHostname = siteUrl => {\r\n  let hostname = '';\r\n\r\n  if (siteUrl) {\r\n    if (!siteUrl.includes('//')) {\r\n      siteUrl = `http://${siteUrl}`;\r\n    }\r\n\r\n    hostname = url.parse(siteUrl).hostname;\r\n  }\r\n\r\n  if (hostname.includes('www.')) {\r\n    hostname = hostname.split('www.')[1];\r\n  }\r\n\r\n  return hostname;\r\n};\r\n\r\nexport default getSiteHostname;\r\n","const HN_ROOT = 'https://news.ycombinator.com';\r\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\r\nexport const HN_USER = `${HN_ROOT}/user?id=`;\r\n\r\nconst getArticleLink = ({ url, id }) => {\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const link = !!url ? url : commentUrl;\r\n  return link;\r\n};\r\n\r\nexport default getArticleLink;\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 14px 24px;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: ${({ theme }) => theme.text};\r\n  margin-top: 0;\r\n  margin-bottom: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  letter-spacing: 0.4px;\r\n`;\r\n\r\nexport const Host = styled.span`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.textSecondary};\r\n`;\r\n\r\nexport const CommentLink = styled.a`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n\r\n  &:visited {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TimeAgo from 'react-timeago';\r\nimport getSiteHostname from 'utils/getSiteHostname';\r\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\r\n\r\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\r\n\r\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\r\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\r\n  const link = getArticleLink({ url, id });\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n\r\n  return (\r\n    <Item>\r\n      <ExternalLink href={link} rel=\"nofollow noreferrer noopener\" target=\"_blank\">\r\n        <Title>\r\n          {title} <Host>({site})</Host>\r\n        </Title>\r\n      </ExternalLink>\r\n      <Description>\r\n        {score} points by{' '}\r\n        <CommentLink href={`${HN_USER}${by}`} rel=\"nofollow noreferrer noopener\" target=\"_blank\">\r\n          {by}\r\n        </CommentLink>{' '}\r\n        <TimeAgo date={new Date(time * 1000).toISOString()} />{' | '}\r\n        <CommentLink href={commentUrl} rel=\"nofollow noreferrer noopener\" target=\"_blank\">\r\n          {kids.length} Comments\r\n        </CommentLink>\r\n      </Description>\r\n    </Item>\r\n  );\r\n};\r\n\r\nListItem.propTypes = {\r\n  by: PropTypes.string.isRequired,\r\n  kids: PropTypes.array,\r\n  score: PropTypes.number.isRequired,\r\n  url: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  time: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ListItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const ListWrapper = styled.ul`\r\n  background-color: ${({ theme }) => theme.backgroundSecondary};\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from 'components/ListItem';\r\n\r\nimport { ListWrapper } from './styles';\r\n\r\nclass List extends Component {\r\n  static propTypes = {\r\n    stories: PropTypes.array.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { stories } = this.props;\r\n    return (\r\n      <ListWrapper>\r\n        {stories.map(story => (\r\n          <ListItem key={story.id} {...story} />\r\n        ))}\r\n      </ListWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import styled from 'styled-components';\r\n\r\nconst RADIUS = 4;\r\n\r\nexport const Item = styled.li`\r\n  height: 100%;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  flex-direction: column;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  height: 240px;\r\n  max-width: 100%;\r\n  border-top-left-radius: ${RADIUS}px;\r\n  border-top-right-radius: ${RADIUS}px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  background-color: ${({ theme }) => theme.backgroundSecondary};\r\n  border-bottom-left-radius: ${RADIUS}px;\r\n  border-bottom-right-radius: ${RADIUS}px;\r\n  word-break: break-word;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: ${({ theme }) => theme.text};\r\n  margin: 0;\r\n  padding: 16px;\r\n  padding-bottom: 70px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Source = styled.div`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  border-top: 1px solid ${({ theme }) => theme.border};\r\n  padding: 16px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport getSiteHostname from 'utils/getSiteHostname';\r\nimport getArticleLink from 'utils/getArticleLink';\r\n\r\nimport { Item, Card, Image, Content, Title, Source } from './styles';\r\n\r\nconst GridItem = ({ url, title, id }) => {\r\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\r\n  const link = getArticleLink({ url, id });\r\n\r\n  return (\r\n    <a href={link} target=\"_blank\" rel=\"nofollow noreferrer nofollow\">\r\n      <Item>\r\n        <Card>\r\n          <Image src=\"https://miro.medium.com/max/1176/1*F9RzuXseG1VrTjFJd403gw.png\" />\r\n          <Content>\r\n            <Title>{title}</Title>\r\n            <Source>\r\n              <div>{`// ${site}`}</div>\r\n            </Source>\r\n          </Content>\r\n        </Card>\r\n      </Item>\r\n    </a>\r\n  );\r\n};\r\n\r\nGridItem.propTypes = {\r\n  url: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default GridItem;\r\n","import styled from 'styled-components';\r\nimport { mobile, tablet, monitor } from 'styles/mediaQueries';\r\n\r\nexport const GridWrapper = styled.ul`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 32px;\r\n\r\n  ${monitor} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${tablet} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  ${mobile} {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GridItem from 'components/GridItem';\r\n\r\nimport { GridWrapper } from './styles';\r\n\r\nclass Grid extends Component {\r\n  static propTypes = {\r\n    stories: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n      }),\r\n    ).isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GridWrapper>\r\n        {this.props.stories.map(story => (\r\n          <GridItem key={story.id} {...story} />\r\n        ))}\r\n      </GridWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst blink = keyframes`\r\n  /**\r\n  * At the start of the animation the dot\r\n  * has an opacity of .2\r\n  */\r\n  0% {\r\n    opacity: .2;\r\n  }\r\n  /**\r\n  * At 20% the dot is fully visible and\r\n  * then fades out slowly\r\n  */\r\n  20% {\r\n    opacity: 1;\r\n  }\r\n  /**\r\n  * Until it reaches an opacity of .2 and\r\n  * the animation can start again\r\n  */\r\n  100% {\r\n    opacity: .2;\r\n  }\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  text-align: center;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    font-size: 80px;\r\n    line-height: 0.1;\r\n\r\n    /**\r\n    * Use the blink animation, which is defined above\r\n    */\r\n    animation-name: ${blink};\r\n    /**\r\n    * The total time of animation\r\n    */\r\n    animation-duration: 1s;\r\n    /**\r\n    * It will repeat itself forever\r\n    */\r\n    animation-iteration-count: infinite;\r\n    /**\r\n    * This makes sure that the starting style (opacity: .2)\r\n    * of the animation is applied before the animation starts.\r\n    * Otherwise we would see a short flash or would have\r\n    * to set the default styling of the dots to the same\r\n    * as the animation. Same applies for the ending styles.\r\n    */\r\n    animation-fill-mode: both;\r\n  }\r\n\r\n  span:nth-child(2) {\r\n    animation-delay: 0.2s;\r\n  }\r\n  span:nth-child(3) {\r\n    animation-delay: 0.4s;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Animation } from './styles';\r\n\r\nconst Loader = () => (\r\n  <Animation>\r\n    <span>.</span>\r\n    <span>.</span>\r\n    <span>.</span>\r\n  </Animation>\r\n);\r\n\r\nexport default Loader;\r\n","export const colorsDark = {\r\n  background: '#272727',\r\n  backgroundSecondary: '#393C3E',\r\n  text: '#bfbebe',\r\n  textSecondary: '#848886',\r\n  border: '#272727',\r\n};\r\n\r\nexport const colorsLight = {\r\n  background: '#EAEAEA',\r\n  backgroundSecondary: '#F8F8F8',\r\n  text: '#848886',\r\n  textSecondary: '#aaaaaa',\r\n  border: '#EAEAEA',\r\n};\r\n","import styled from 'styled-components';\r\nimport { mobile, tablet } from 'styles/mediaQueries';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 85%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 200px;\r\n\r\n  ${tablet} {\r\n    width: 96%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 24px;\r\n  margin-bottom: 26px;\r\n\r\n  ${mobile} {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const LinkWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const SocialLink = styled.a`\r\n  margin-left: 16px;\r\n\r\n  i {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n\r\n  ${mobile} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const GithubLink = styled.a`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 14px;\r\n  text-decoration: underline;\r\n\r\n  &:visited {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeProvider } from 'styled-components';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Nav from 'components/Nav';\r\nimport List from 'components/List';\r\nimport Grid from 'components/Grid';\r\nimport Loader from 'components/Loader';\r\nimport { layouts, themes } from 'store/app/utils';\r\nimport { colorsDark, colorsLight } from 'styles/palette';\r\n\r\nimport { Wrapper, Title, TitleWrapper, GithubLink, SocialLink } from './styles';\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    stories: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    layout: PropTypes.string.isRequired,\r\n    theme: PropTypes.string.isRequired,\r\n    stories: PropTypes.array.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    storyIds: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    hasMoreStores: PropTypes.bool.isRequired,\r\n    fetchStories: PropTypes.func.isRequired,\r\n    fetchStoriesFirstPage: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStoriesFirstPage();\r\n    this.setBodyBackgroundColor();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.theme !== this.props.theme) {\r\n      this.setBodyBackgroundColor();\r\n    }\r\n  }\r\n\r\n  setBodyBackgroundColor() {\r\n    if (this.props.theme === themes.light) {\r\n      document.body.style = `background-color: ${colorsLight.background};`;\r\n    } else {\r\n      document.body.style = `background-color: ${colorsDark.background};`;\r\n    }\r\n  }\r\n\r\n  fetchStories = () => {\r\n    const { storyIds, page, fetchStories, isFetching } = this.props;\r\n    if (!isFetching) {\r\n      fetchStories({ storyIds, page });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { stories, layout, theme, hasMoreStores } = this.props;\r\n    return (\r\n      <ThemeProvider theme={theme === themes.light ? colorsLight : colorsDark}>\r\n        <div>\r\n          <Nav />\r\n          <Wrapper>\r\n            <TitleWrapper>\r\n              <Title>\r\n                <div>{'// Hacker News Reader'}</div>\r\n                {/* <GithubLink\r\n                  href=\"https://github.com/gitconnected/hacker-news-reader\"\r\n                  target=\"_blank\"\r\n                >\r\n                  (build your own)\r\n                </GithubLink> */}\r\n              </Title>\r\n              {/* <div>\r\n                <SocialLink href=\"https://twitter.com/gitconnected\" target=\"blank\">\r\n                  <i className=\"fab fa-twitter\" />\r\n                </SocialLink>\r\n                <SocialLink href=\"https://community.gitconnected.com\" target=\"blank\">\r\n                  <i className=\"fab fa-slack-hash\" />\r\n                </SocialLink>\r\n                <SocialLink href=\"https://levelup.gitconnected.com\" target=\"blank\">\r\n                  <i className=\"fab fa-medium-m\" />\r\n                </SocialLink>\r\n                <SocialLink href=\"https://www.facebook.com/gitconnectednetwork\" target=\"blank\">\r\n                  <i className=\"fab fa-facebook\" />\r\n                </SocialLink>\r\n                <SocialLink href=\"https://gitconnected.com\" target=\"blank\">\r\n                  <i className=\"fas fa-link\" />\r\n                </SocialLink>\r\n              </div> */}\r\n            </TitleWrapper>\r\n            <InfiniteScroll\r\n              dataLength={stories.length}\r\n              next={this.fetchStories}\r\n              hasMore={hasMoreStores}\r\n              loader={<Loader />}\r\n              style={{\r\n                height: '100%',\r\n                overflow: 'visible',\r\n              }}\r\n            >\r\n              {layout === layouts.list ? <List stories={stories} /> : <Grid stories={stories} />}\r\n            </InfiniteScroll>\r\n          </Wrapper>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport actions from 'store/story/actions';\r\nimport { hasMoreStoriesSelector } from 'store/story/selectors';\r\nimport App from './App';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  layout: state.app.layout,\r\n  theme: state.app.theme,\r\n  stories: state.story.stories,\r\n  page: state.story.page,\r\n  storyIds: state.story.storyIds,\r\n  isFetching: state.story.isFetching,\r\n  hasMoreStores: hasMoreStoriesSelector(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\r\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(App);\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n\r\n    html, body {\r\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\r\n      width: 100vw;\r\n      overflow-x: hidden;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    ul {\r\n      list-style: none;\r\n      padding: 0;\r\n    }\r\n\r\n    a {\r\n      text-decoration: none;\r\n\r\n      &:visited {\r\n        color: inherit;\r\n      }\r\n    }\r\n  `;\r\n\r\nexport default GlobalStyles;\r\n","import { THEME_KEY, LAYOUT_KEY } from './storageDefinitions';\r\nimport loadState from './loadState';\r\n\r\nconst loadInitialState = () => {\r\n  const initialState = {};\r\n  const layout = loadState({ storageKey: LAYOUT_KEY });\r\n  const theme = loadState({ storageKey: THEME_KEY });\r\n\r\n  if (layout || theme) {\r\n    initialState.app = {};\r\n    initialState.app.layout = layout;\r\n    initialState.app.theme = theme;\r\n  }\r\n\r\n  return initialState;\r\n};\r\n\r\nexport default loadInitialState;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from 'store';\r\nimport App from 'components/App';\r\nimport GlobalStyles from 'styles/globals';\r\nimport loadInitialState from 'store/middleware/localStorageMiddleware/loadInitialState';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst renderApp = () => {\r\n  const initialState = loadInitialState();\r\n  const store = configureStore(initialState);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.log('Initial state ->');\r\n    console.log(store.getState());\r\n  }\r\n\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <div>\r\n        <GlobalStyles />\r\n        <App />\r\n      </div>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n};\r\n\r\nrenderApp();\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}